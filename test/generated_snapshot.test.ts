import { describe, it, expect } from 'vitest';
import { generate } from '../src/tywrap.js';
import { fsUtils } from '../src/utils/runtime.js';

describe('Generated TS snapshot - math', () => {
  it('contains stable header and a known function wrapper', async () => {
    const outDir = './generated';
    const res = await generate({
      pythonModules: { math: { runtime: 'node', typeHints: 'strict' } },
      output: { dir: outDir, format: 'esm', declaration: false, sourceMap: false },
      runtime: { node: { pythonPath: 'python3' } },
      performance: { caching: false, batching: false, compression: 'none' },
      development: { hotReload: false, sourceMap: false, validation: 'none' },
    } as any);
    expect(res.written.some(p => p.endsWith('math.generated.ts'))).toBe(true);
    const content = await fsUtils.readFile(`${outDir}/math.generated.ts`);
    expect(content).toContain('Generated by tywrap');
    expect(content).toContain('export async function sqrt');
    expect(content).toContain("__bridge.call('math.sqrt'");
    // basic typing checks
    expect(content).toMatch(/export async function \w+\(.*: .*\): Promise<.*>/);
  });
});
